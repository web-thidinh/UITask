"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _useQuery = _interopRequireDefault(require("./use-query"));

var _useMutation = _interopRequireDefault(require("./use-mutation"));

var _requestsContext = _interopRequireDefault(require("./requests-context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var InternalRequestErrorBoundary = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(InternalRequestErrorBoundary, _React$Component);

  function InternalRequestErrorBoundary(props) {
    var _this;

    _this = _React$Component.call(this, props) || this;
    _this.state = {
      error: null
    };
    return _this;
  }

  InternalRequestErrorBoundary.getDerivedStateFromError = function getDerivedStateFromError(error) {
    return {
      error: error
    };
  };

  var _proto = InternalRequestErrorBoundary.prototype;

  _proto.componentDidCatch = function componentDidCatch(error) {
    var _this$props = this.props,
        type = _this$props.type,
        requestKey = _this$props.requestKey,
        setActiveError = _this$props.setActiveError;

    if (type === error.type && requestKey === error.requestKey) {
      setActiveError(error);
    }
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        children = _this$props2.children,
        type = _this$props2.type,
        requestKey = _this$props2.requestKey,
        fallback = _this$props2.fallback;

    if (this.state.error && type === this.state.error.type && requestKey === this.state.error.requestKey) {
      return fallback(this.state.error);
    }

    return children;
  };

  return InternalRequestErrorBoundary;
}(_react["default"].Component);

var RequestErrorBoundary = function RequestErrorBoundary(_ref) {
  var type = _ref.type,
      requestKey = _ref.requestKey,
      autoReset = _ref.autoReset,
      children = _ref.children,
      fallback = _ref.fallback;
  var requestContext = (0, _react.useContext)(_requestsContext["default"]);

  var _useState = (0, _react.useState)(null),
      activeError = _useState[0],
      setActiveError = _useState[1];

  var _useState2 = (0, _react.useState)(0),
      recoveryCounter = _useState2[0],
      setRecoveryCounter = _useState2[1];

  autoReset = autoReset === undefined ? requestContext.autoReset : autoReset;
  var query = (0, _useQuery["default"])({
    type: type,
    requestKey: requestKey,
    autoReset: autoReset,
    autoLoad: false,
    throwError: false,
    suspense: false,
    suspenseSsr: false
  });
  var mutation = (0, _useMutation["default"])({
    type: type,
    requestKey: requestKey,
    autoReset: autoReset,
    throwError: false,
    suspense: false
  });
  (0, _react.useEffect)(function () {
    if (!query.error && !query.loading && !mutation.error && !mutation.loading && activeError) {
      setActiveError(null);
      setRecoveryCounter(function (v) {
        return v + 1;
      });
    }
  }, [query.error, query.loading, mutation.error, mutation.loading, activeError]);
  return /*#__PURE__*/_react["default"].createElement(InternalRequestErrorBoundary, {
    key: recoveryCounter,
    setActiveError: setActiveError,
    fallback: fallback,
    type: type,
    requestKey: requestKey
  }, children);
};

RequestErrorBoundary.propTypes = process.env.NODE_ENV !== "production" ? {
  type: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].func]).isRequired,
  requestKey: _propTypes["default"].string,
  children: _propTypes["default"].element.isRequired,
  fallback: _propTypes["default"].func.isRequired,
  autoReset: _propTypes["default"].bool
} : {};
var _default = RequestErrorBoundary;
exports["default"] = _default;