"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _redux = require("redux");

var _reactRedux = require("react-redux");

var _core = require("@redux-requests/core");

var _requestsContext = _interopRequireDefault(require("./requests-context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var defaultGetMiddleware = function defaultGetMiddleware(requestsMiddleware) {
  return requestsMiddleware;
};

var RequestsProvider = function RequestsProvider(_ref) {
  var children = _ref.children,
      requestsConfig = _ref.requestsConfig,
      extraReducers = _ref.extraReducers,
      customStore = _ref.store,
      _ref$getMiddleware = _ref.getMiddleware,
      getMiddleware = _ref$getMiddleware === void 0 ? defaultGetMiddleware : _ref$getMiddleware,
      _ref$suspense = _ref.suspense,
      suspense = _ref$suspense === void 0 ? false : _ref$suspense,
      _ref$autoLoad = _ref.autoLoad,
      autoLoad = _ref$autoLoad === void 0 ? false : _ref$autoLoad,
      _ref$autoReset = _ref.autoReset,
      autoReset = _ref$autoReset === void 0 ? false : _ref$autoReset,
      _ref$throwError = _ref.throwError,
      throwError = _ref$throwError === void 0 ? false : _ref$throwError,
      _ref$suspenseSsr = _ref.suspenseSsr,
      suspenseSsr = _ref$suspenseSsr === void 0 ? false : _ref$suspenseSsr,
      _ref$getStore = _ref.getStore,
      getStore = _ref$getStore === void 0 ? undefined : _ref$getStore,
      _ref$initialState = _ref.initialState,
      initialState = _ref$initialState === void 0 ? undefined : _ref$initialState;
  var contextValue = (0, _react.useMemo)(function () {
    return {
      suspense: suspense,
      autoLoad: autoLoad,
      autoReset: autoReset,
      throwError: throwError,
      suspenseSsr: suspenseSsr
    };
  }, [suspense, autoLoad, autoReset, throwError, suspenseSsr]);
  var store = (0, _react.useMemo)(function () {
    if (customStore) {
      return (0, _core.createRequestsStore)(customStore);
    }

    var _handleRequests = (0, _core.handleRequests)(requestsConfig),
        requestsReducer = _handleRequests.requestsReducer,
        requestsMiddleware = _handleRequests.requestsMiddleware;

    var reducers = (0, _redux.combineReducers)(_extends({
      requests: requestsReducer
    }, extraReducers));
    var composeEnhancers = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || _redux.compose;
    return (0, _core.createRequestsStore)((0, _redux.createStore)(reducers, initialState, composeEnhancers(_redux.applyMiddleware.apply(void 0, getMiddleware(requestsMiddleware)))));
  }, []);

  if (getStore) {
    getStore(store);
  }

  return /*#__PURE__*/_react["default"].createElement(_reactRedux.Provider, {
    store: store
  }, /*#__PURE__*/_react["default"].createElement(_requestsContext["default"].Provider, {
    value: contextValue
  }, children));
};

RequestsProvider.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes["default"].element.isRequired,
  requestsConfig: _propTypes["default"].any,
  extraReducers: _propTypes["default"].any,
  store: _propTypes["default"].any,
  getMiddleware: _propTypes["default"].func,
  suspense: _propTypes["default"].bool,
  autoLoad: _propTypes["default"].bool,
  autoReset: _propTypes["default"].bool,
  throwError: _propTypes["default"].bool,
  suspenseSsr: _propTypes["default"].bool,
  getStore: _propTypes["default"].func,
  initialState: _propTypes["default"].any
} : {};
var _default = RequestsProvider;
exports["default"] = _default;